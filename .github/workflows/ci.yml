name: Docker
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: |
          NODE_ENV=production npm run build

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist/
          retention-days: 1

  go-vet:
    name: Go Vet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Create placeholder dist directory
        run: |
          mkdir -p dist
          touch dist/placeholder

      - name: Run go vet
        run: go vet ./...

  go-test:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Create placeholder dist directory
        run: |
          mkdir -p dist
          touch dist/placeholder

      - name: Run go test
        run: go test ./...

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: [go-vet, go-test, frontend-build, frontend-lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: linux/amd64,linux/arm64
          tags: taleshape/shaper:latest
